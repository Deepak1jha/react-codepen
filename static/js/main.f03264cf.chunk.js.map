{"version":3,"sources":["component/editor/Editor.jsx","hooks/useLocalStorage/useLocalStorage.js","App.js","index.js"],"names":["Editor","displayName","language","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","theme","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAWe,SAASA,EAAT,GAA2D,IAA1CC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SAAW,EAE/CC,oBAAS,GAFsC,mBAEhEC,EAFgE,KAE1DC,EAF0D,KAQvE,OACE,yBAAKC,UAAS,2BAAsBF,EAAI,iBACtC,yBAAKE,UAAU,gBACZP,EACD,4BACEQ,KAAM,SACND,UAAU,sBACVE,QAAS,kBAAMH,GAAQ,SAAAI,GAAQ,OAAKA,OACrC,kBAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,QAGjD,kBAAC,aAAD,CACEC,eAhBN,SAAsBC,EAAQC,EAAMd,GAClCC,EAASD,IAgBLA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMnB,EACNoB,aAAa,EACbC,MAAO,eCnCF,SAASC,EAAgBC,EAAKC,GAC3C,IAAMC,EAHO,UAGgBF,EAD4B,EAE/BpB,oBAAS,WACjC,IAAMuB,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GACrC,oBAAOF,EACFA,IAEAA,KAR8C,mBAElDvB,EAFkD,KAE3C8B,EAF2C,KAezD,OAHAC,qBAAU,WACRL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUjC,MAChD,CAACwB,EAAaxB,IACV,CAACA,EAAO8B,GC0CFI,MAxDf,WAAgB,IAAD,EAEWb,EAAgB,OAAQ,IAFnC,mBAENc,EAFM,KAEAC,EAFA,OAGSf,EAAgB,MAAO,IAHhC,mBAGNgB,EAHM,KAGDC,EAHC,OAIOjB,EAAgB,KAAM,IAJ7B,mBAINkB,EAJM,KAIFC,EAJE,OAKetC,mBAAS,IALxB,mBAKNuC,EALM,KAKEC,EALF,KAoBb,OAbAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,qBAAD,OAEHP,EAFG,+BAGFE,EAHE,iCAIDE,EAJC,8BAOR,KACH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGb,oCACE,yBAAKlC,UAAU,iBACb,kBAACR,EAAD,CACEE,SAAU,MACVD,YAAa,OACbE,MAAOmC,EACPlC,SAAUmC,IAEZ,kBAACvC,EAAD,CACEE,SAAU,MACVD,YAAa,MACbE,MAAOqC,EACPpC,SAAUqC,IAEZ,kBAACzC,EAAD,CACEE,SAAU,aACVD,YAAa,KACbE,MAAOuC,EACPtC,SAAUuC,KAGd,yBAAKnC,UAAU,SACb,4BACEoC,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,YCjDjBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.f03264cf.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\nimport {Controlled as ControlledEditor} from \"react-codemirror2\";\nimport \"../../index.css\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCompressAlt, faExpandAlt} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Editor({displayName, language, value, onChange}) {\n\n  const [open, setOpen] = useState(true);\n\n  function handleChange(editor, data, value) {\n    onChange(value)\n  }\n\n  return (\n    <div className={`editor-container ${open ? `` : `collapsed`}`}>\n      <div className=\"editor-title\">\n        {displayName}\n        <button\n          type={\"button\"}\n          className=\"expand-collapse-btn\"\n          onClick={() => setOpen(prevOpen => !prevOpen)}\n        ><FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt}/>\n        </button>\n      </div>\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          lineNumbers: true,\n          theme: \"material\"\n        }}/>\n    </div>\n  )\n}\n","import React, {useEffect, useState} from \"react\";\n\nconst PREFIX = \"codepen\";\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key;\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey);\n    if (jsonValue != null) return JSON.parse(jsonValue)\n    if (typeof initialValue === `function`) {\n      return initialValue()\n    } else {\n      return initialValue;\n    }\n  });\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value]);\n  return [value, setValue]\n}\n","import React, {useEffect, useState} from 'react';\nimport Editor from \"./component/editor/Editor\";\nimport \"./index.css\";\nimport useLocalStorage from \"./hooks/useLocalStorage/useLocalStorage\";\n\nfunction App() {\n\n  const [html, setHtml] = useLocalStorage(`html`, \"\");\n  const [css, setCss] = useLocalStorage(\"css\", \"\");\n  const [js, setJs] = useLocalStorage(\"js\", \"\");\n  const [srcDoc, setSrcDoc] = useState(\"\");\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(\n        `<html>\n    <body>${html}</body>\n    <style>${css}</style>\n    <script>${js}</script>\n    </html>`\n      )\n    }, 250)\n    return () => clearTimeout(timeout)\n  }, [html, css, js]);\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor\n          language={\"xml\"}\n          displayName={\"HTML\"}\n          value={html}\n          onChange={setHtml}\n        />\n        <Editor\n          language={\"css\"}\n          displayName={\"CSS\"}\n          value={css}\n          onChange={setCss}\n        />\n        <Editor\n          language={\"javascript\"}\n          displayName={\"JS\"}\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n      <div className=\"pane \">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}